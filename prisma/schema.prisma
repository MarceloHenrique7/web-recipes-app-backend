generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Ingredient {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  quantity Float
  recipeId String? @db.ObjectId
  unit     String
}

model Instruction {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  recipeId    String? @db.ObjectId
  subtitle    String
  title       String
}

model Notification {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @db.Date
  description     String
  isGeneral       Boolean
  isRead          Boolean
  /// Could not determine type: the field only had null or empty values in the sample set.
  readByUsers     Json?
  recipeId        String   @db.ObjectId
  recipientUserId String   @db.ObjectId
  subtitle        String
  title           String
  type            String
  userId          String   @db.ObjectId
}

model Nutrient {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  calories     Float
  carbohydrate Float
  fat          Float
  protein      Float
  recipeId     String? @db.ObjectId
}

model Recipe {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  categories  String[]
  cookTime    String
  description String
  forSale     Boolean
  imageUrl    String
  isPublic    Boolean
  lastUpdate  DateTime @db.Date
  name        String
  prepTime    String
  price       Float
  serving     String
  userId      String   @db.ObjectId
}

model Transaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  amount          Float
  createdAt       DateTime @db.Date
  currency        String
  method          String
  recipeId        String?  @db.ObjectId
  status          String
  transactionType String
  updatedAt       DateTime @db.Date
  userId          String   @db.ObjectId
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  auth0Id      String
  email        String
  name         String
  savedRecipes String[]
  walletId     String?  @db.ObjectId
}

model Wallet {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  balance Float
  userId  String @db.ObjectId
}
